{"version":3,"file":"dash_chat.min.js","mappings":"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","sources":["webpack:///./src/styles/chatStyles.css","webpack:///./src/styles/indicatorStyle.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack:///./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack:///./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack:///./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/compat","webpack:///webpack/runtime/nonce","webpack:///external window \"React\"","webpack:///./node_modules/linkifyjs/dist/linkify.es.js","webpack:///./node_modules/linkify-react/dist/linkify-react.es.js","webpack:///external window \"PropTypes\"","webpack:///./src/private/ChatMessageInput.js","webpack:///./src/styles/indicatorStyle.css?f59a","webpack:///./src/private/DotsIndicator.js","webpack:///./src/private/SpinnerIndicator.js","webpack:///./src/styles/sharedStyles.js","webpack:///./src/styles/chatStyles.css?5f1e","webpack:///./src/lib/components/ChatComponent.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.chat-container {\n    border: 1px solid;\n    border-radius: 8px;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n}\n\n.chat-messages {\n    flex: 1;\n    overflow-y: auto;\n    padding: 5px;\n    display: flex;\n    flex-direction: column;\n}\n\n.message-input-container {\n    display: flex;\n    margin-top: 10px;\n    padding-top: 10px;\n}\n\n.message-input-field {\n    flex: 1;\n    padding: 8px;\n    border: 1px solid;\n    border-radius: 4px;\n    margin-right: 5px;\n}\n\n.message-input-field:focus {\n    outline: none;\n}\n\n.message-input-button {\n    background-color: #007bff;\n    color: white;\n    padding: 8px 12px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\n.message-input-container .disabled {\n    background-color: #efefef4d;\n    color: #1010104d;\n    border-color: #efefef4d;\n    cursor: auto;\n}\n\n.message-input-button:hover {\n    background-color: #0056b3;\n}\n\n.message-input-container .disabled:hover {\n    background-color: #efefef4d;\n}\n\n.link-message {\n    color: #fff;\n    text-decoration: underline;\n}\n\n.empty-chat {\n    margin: 0 auto;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/chatStyles.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,aAAa;IACb,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,OAAO;IACP,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,OAAO;IACP,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,2BAA2B;IAC3B,gBAAgB;IAChB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,WAAW;IACX,0BAA0B;AAC9B;;AAEA;IACI,cAAc;AAClB\",\"sourcesContent\":[\".chat-container {\\n    border: 1px solid;\\n    border-radius: 8px;\\n    padding: 10px;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.chat-messages {\\n    flex: 1;\\n    overflow-y: auto;\\n    padding: 5px;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.message-input-container {\\n    display: flex;\\n    margin-top: 10px;\\n    padding-top: 10px;\\n}\\n\\n.message-input-field {\\n    flex: 1;\\n    padding: 8px;\\n    border: 1px solid;\\n    border-radius: 4px;\\n    margin-right: 5px;\\n}\\n\\n.message-input-field:focus {\\n    outline: none;\\n}\\n\\n.message-input-button {\\n    background-color: #007bff;\\n    color: white;\\n    padding: 8px 12px;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n}\\n\\n.message-input-container .disabled {\\n    background-color: #efefef4d;\\n    color: #1010104d;\\n    border-color: #efefef4d;\\n    cursor: auto;\\n}\\n\\n.message-input-button:hover {\\n    background-color: #0056b3;\\n}\\n\\n.message-input-container .disabled:hover {\\n    background-color: #efefef4d;\\n}\\n\\n.link-message {\\n    color: #fff;\\n    text-decoration: underline;\\n}\\n\\n.empty-chat {\\n    margin: 0 auto;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.typing-dots {\n    display: flex;\n    gap: 4px;\n}\n\n.typing-dots span {\n    display: inline-block;\n    width: 8px;\n    height: 8px;\n    background-color: gray;\n    border-radius: 50%;\n    animation: bounce 1.2s infinite ease-in-out;\n}\n\n.typing-dots span:nth-child(2) {\n    animation-delay: 0.2s;\n}\n\n.typing-dots span:nth-child(3) {\n    animation-delay: 0.4s;\n}\n\n.typing-spinner {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    border: 3px solid gray;\n    border-top: 3px solid transparent;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n    from {\n        transform: rotate(0deg);\n    }\n\n    to {\n        transform: rotate(360deg);\n    }\n}\n\n\n@keyframes bounce {\n\n    0%,\n    80%,\n    100% {\n        transform: scale(0);\n    }\n\n    40% {\n        transform: scale(1);\n    }\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/indicatorStyle.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,QAAQ;AACZ;;AAEA;IACI,qBAAqB;IACrB,UAAU;IACV,WAAW;IACX,sBAAsB;IACtB,kBAAkB;IAClB,2CAA2C;AAC/C;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;IACrB,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,iCAAiC;IACjC,kBAAkB;IAClB,kCAAkC;AACtC;;AAEA;IACI;QACI,uBAAuB;IAC3B;;IAEA;QACI,yBAAyB;IAC7B;AACJ;;;AAGA;;IAEI;;;QAGI,mBAAmB;IACvB;;IAEA;QACI,mBAAmB;IACvB;AACJ\",\"sourcesContent\":[\".typing-dots {\\n    display: flex;\\n    gap: 4px;\\n}\\n\\n.typing-dots span {\\n    display: inline-block;\\n    width: 8px;\\n    height: 8px;\\n    background-color: gray;\\n    border-radius: 50%;\\n    animation: bounce 1.2s infinite ease-in-out;\\n}\\n\\n.typing-dots span:nth-child(2) {\\n    animation-delay: 0.2s;\\n}\\n\\n.typing-dots span:nth-child(3) {\\n    animation-delay: 0.4s;\\n}\\n\\n.typing-spinner {\\n    display: inline-block;\\n    width: 20px;\\n    height: 20px;\\n    border: 3px solid gray;\\n    border-top: 3px solid transparent;\\n    border-radius: 50%;\\n    animation: spin 1s linear infinite;\\n}\\n\\n@keyframes spin {\\n    from {\\n        transform: rotate(0deg);\\n    }\\n\\n    to {\\n        transform: rotate(360deg);\\n    }\\n}\\n\\n\\n@keyframes bounce {\\n\\n    0%,\\n    80%,\\n    100% {\\n        transform: scale(0);\\n    }\\n\\n    40% {\\n        transform: scale(1);\\n    }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var getCurrentScript = function() {\n    var script = document.currentScript;\n    if (!script) {\n        /* Shim for IE11 and below */\n        /* Do not take into account async scripts and inline scripts */\n\n        var doc_scripts = document.getElementsByTagName('script');\n        var scripts = [];\n\n        for (var i = 0; i < doc_scripts.length; i++) {\n            scripts.push(doc_scripts[i]);\n        }\n\n        scripts = scripts.filter(function(s) { return !s.async && !s.text && !s.textContent; });\n        script = scripts.slice(-1)[0];\n    }\n\n    return script;\n};\n\nvar isLocalScript = function(script) {\n    return /\\/_dash-component-suites\\//.test(script.src);\n};\n\nObject.defineProperty(__webpack_require__, 'p', {\n    get: (function () {\n        var script = getCurrentScript();\n\n        var url = script.src.split('/').slice(0, -1).join('/') + '/';\n\n        return function() {\n            return url;\n        };\n    })()\n});\n\nif (typeof jsonpScriptSrc !== 'undefined') {\n    var __jsonpScriptSrc__ = jsonpScriptSrc;\n    jsonpScriptSrc = function(chunkId) {\n        var script = getCurrentScript();\n        var isLocal = isLocalScript(script);\n\n        var src = __jsonpScriptSrc__(chunkId);\n\n        if(!isLocal) {\n            return src;\n        }\n\n        var srcFragments = src.split('/');\n        var fileFragments = srcFragments.slice(-1)[0].split('.');\n\n        fileFragments.splice(1, 0, \"v0_1_1m1737915062\");\n        srcFragments.splice(-1, 1, fileFragments.join('.'))\n\n        return srcFragments.join('/');\n    };\n}\n","__webpack_require__.nc = undefined;","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4w0s2x0a2z0ure5ba0by2idu3namex4d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dad1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster6d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp3ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = 'ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token = null) {\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly = false) {\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\nconst ASCIINUMERICAL = 'ASCIINUMERICAL'; // contains a-z, 0-9\nconst ALPHANUMERICAL = 'ALPHANUMERICAL'; // contains numbers and letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL = 'NL'; // \\n\n\n// Opening/closing bracket classes\n// TODO: Rename OPEN -> LEFT and CLOSE -> RIGHT in v5 to fit with Unicode names\n// Also rename angle brackes to LESSTHAN and GREATER THAN\nconst OPENBRACE = 'OPENBRACE'; // {\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst FULLWIDTHLEFTPAREN = 'FULLWIDTHLEFTPAREN'; // （\nconst FULLWIDTHRIGHTPAREN = 'FULLWIDTHRIGHTPAREN'; // ）\nconst LEFTCORNERBRACKET = 'LEFTCORNERBRACKET'; // 「\nconst RIGHTCORNERBRACKET = 'RIGHTCORNERBRACKET'; // 」\nconst LEFTWHITECORNERBRACKET = 'LEFTWHITECORNERBRACKET'; // 『\nconst RIGHTWHITECORNERBRACKET = 'RIGHTWHITECORNERBRACKET'; // 』\nconst FULLWIDTHLESSTHAN = 'FULLWIDTHLESSTHAN'; // ＜\nconst FULLWIDTHGREATERTHAN = 'FULLWIDTHGREATERTHAN'; // ＞\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\nconst FULLWIDTHMIDDLEDOT = 'FULLWIDTHMIDDLEDOT'; // ・\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tASCIINUMERICAL: ASCIINUMERICAL,\n\tALPHANUMERICAL: ALPHANUMERICAL,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL,\n\tOPENBRACE: OPENBRACE,\n\tCLOSEBRACE: CLOSEBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEPAREN: CLOSEPAREN,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tFULLWIDTHLEFTPAREN: FULLWIDTHLEFTPAREN,\n\tFULLWIDTHRIGHTPAREN: FULLWIDTHRIGHTPAREN,\n\tLEFTCORNERBRACKET: LEFTCORNERBRACKET,\n\tRIGHTCORNERBRACKET: RIGHTCORNERBRACKET,\n\tLEFTWHITECORNERBRACKET: LEFTWHITECORNERBRACKET,\n\tRIGHTWHITECORNERBRACKET: RIGHTWHITECORNERBRACKET,\n\tFULLWIDTHLESSTHAN: FULLWIDTHLESSTHAN,\n\tFULLWIDTHGREATERTHAN: FULLWIDTHGREATERTHAN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tFULLWIDTHMIDDLEDOT: FULLWIDTHMIDDLEDOT,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst CR = '\\r'; // carriage-return character\nconst LF = '\\n'; // line-feed character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\nconst OBJECT_REPLACEMENT = '\\ufffc'; // whitespace placeholder that sometimes appears in rich text editors\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '❤️', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes = []) {\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, '（', FULLWIDTHLEFTPAREN);\n  tt(Start, '）', FULLWIDTHRIGHTPAREN);\n  tt(Start, '「', LEFTCORNERBRACKET);\n  tt(Start, '」', RIGHTCORNERBRACKET);\n  tt(Start, '『', LEFTWHITECORNERBRACKET);\n  tt(Start, '』', RIGHTWHITECORNERBRACKET);\n  tt(Start, '＜', FULLWIDTHLESSTHAN);\n  tt(Start, '＞', FULLWIDTHGREATERTHAN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  tt(Start, '・', FULLWIDTHMIDDLEDOT);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n  const Asciinumeric = tr(Num, ASCII_LETTER, ASCIINUMERICAL, {\n    [asciinumeric]: true\n  });\n  const Alphanumeric = tr(Num, LETTER, ALPHANUMERICAL, {\n    [alphanumeric]: true\n  });\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, DIGIT, Asciinumeric);\n  tr(Word, ASCII_LETTER, Word);\n  tr(Asciinumeric, DIGIT, Asciinumeric);\n  tr(Asciinumeric, ASCII_LETTER, Asciinumeric);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, DIGIT, Alphanumeric);\n  tr(UWord, LETTER, UWord);\n  tr(Alphanumeric, DIGIT, Alphanumeric);\n  tr(Alphanumeric, ASCII_LETTER); // Non-accepting\n  tr(Alphanumeric, LETTER, Alphanumeric); // Non-accepting\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Nl = tt(Start, LF, NL, {\n    [whitespace]: true\n  });\n  const Cr = tt(Start, CR, WS, {\n    [whitespace]: true\n  });\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, OBJECT_REPLACEMENT, Ws);\n  tt(Cr, LF, Nl); // \\r\\n\n  tt(Cr, OBJECT_REPLACEMENT, Ws);\n  tr(Cr, SPACE, Ws);\n  tt(Ws, CR); // non-accepting state to avoid mixing whitespaces\n  tt(Ws, LF); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n  tt(Ws, OBJECT_REPLACEMENT, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tt(Emoji, '#'); // no transition, emoji regex seems to match #\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tt(EmojiJoiner, '#');\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word], [DIGIT, Asciinumeric]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord], [DIGIT, Alphanumeric]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender = null) {\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n   */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '…' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol = defaults.defaultProtocol) {\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme = defaults.defaultProtocol) {\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1({\n  groups\n}) {\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [COLON, COMMA, DOT, EXCLAMATION, PERCENT, QUERY, QUOTE, SEMI, OPENANGLEBRACKET, CLOSEANGLEBRACKET, OPENBRACE, CLOSEBRACE, CLOSEBRACKET, OPENBRACKET, OPENPAREN, CLOSEPAREN, FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN, LEFTCORNERBRACKET, RIGHTCORNERBRACKET, LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET, FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, OPENBRACE, CLOSEBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  tt(EmailDomainHyphen, HYPHEN, EmailDomainHyphen);\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port number\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  tt(DomainHyphen, HYPHEN, DomainHyphen);\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  tt(SchemeColon, QUERY, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n  const bracketPairs = [[OPENBRACE, CLOSEBRACE],\n  // {}\n  [OPENBRACKET, CLOSEBRACKET],\n  // []\n  [OPENPAREN, CLOSEPAREN],\n  // ()\n  [OPENANGLEBRACKET, CLOSEANGLEBRACKET],\n  // <>\n  [FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN],\n  // （）\n  [LEFTCORNERBRACKET, RIGHTCORNERBRACKET],\n  // 「」\n  [LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET],\n  // 『』\n  [FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN] // ＜＞\n  ];\n  for (let i = 0; i < bracketPairs.length; i++) {\n    const [OPEN, CLOSE] = bracketPairs[i];\n    const UrlOpen = tt(Url$1, OPEN); // URL followed by open bracket\n\n    // Continue not accepting for open brackets\n    tt(UrlNonaccept, OPEN, UrlOpen);\n\n    // Closing bracket component. This character WILL be included in the URL\n    tt(UrlOpen, CLOSE, Url$1);\n\n    // URL that beings with an opening bracket, followed by a symbols.\n    // Note that the final state can still be `UrlOpen` (if the URL has a\n    // single opening bracket for some reason).\n    const UrlOpenQ = makeState(Url);\n    ta(UrlOpen, qsAccepting, UrlOpenQ);\n    const UrlOpenSyms = makeState(); // UrlOpen followed by some symbols it cannot end it\n    ta(UrlOpen, qsNonAccepting);\n\n    // URL that begins with an opening bracket, followed by some symbols\n    ta(UrlOpenQ, qsAccepting, UrlOpenQ);\n    ta(UrlOpenQ, qsNonAccepting, UrlOpenSyms);\n    ta(UrlOpenSyms, qsAccepting, UrlOpenQ);\n    ta(UrlOpenSyms, qsNonAccepting, UrlOpenSyms);\n\n    // Close brace/bracket to become regular URL\n    tt(UrlOpenQ, CLOSE, Url$1);\n    tt(UrlOpenSyms, CLOSE, Url$1);\n  }\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n  return INIT;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} scheme\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash = false) {\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error(`linkifyjs: incorrect scheme format.\n1. Must only contain digits, lowercase ASCII letters or \"-\"\n2. Cannot start or end with \"-\"\n3. \"-\" cannot repeat`);\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n  return INIT;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\ntokenize.scan = run$1; // for testing\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n */\nfunction find(str, type = null, opts = null) {\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type) && options.check(token)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type = null) {\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, multi as text, tokenize };\n","import * as React from 'react';\nimport { Options, options, tokenize } from 'linkifyjs';\n\n/**\n * Given a string, converts to an array of valid React components\n * (which may include strings)\n * @param {string} str\n * @param {Options} opts\n * @param {{ [elementId: string]: number }} meta\n * @returns {React.ReactNodeArray}\n */\nfunction stringToElements(str, opts, meta) {\n  const tokens = tokenize(str);\n  const elements = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.t === 'nl' && opts.get('nl2br')) {\n      const key = `__linkify-el-${meta.elementId++}`;\n      elements.push(React.createElement('br', {\n        key\n      }));\n    } else if (!token.isLink || !opts.check(token)) {\n      // Regular text\n      elements.push(token.toString());\n    } else {\n      let rendered = opts.render(token);\n      if (!('key' in rendered.props)) {\n        // Ensure generated element has unique key\n        const key = `__linkify-el-${meta.elementId++}`;\n        const props = options.assign({\n          key\n        }, rendered.props);\n        rendered = React.cloneElement(rendered, props);\n      }\n      elements.push(rendered);\n    }\n  }\n  return elements;\n}\n\n// Recursively linkify the contents of the given React Element instance\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {React.ReactElement<P, T>} element\n * @param {Options} opts\n * @param {{ [elementId: string]: number }} meta\n * @returns {React.ReactElement<P, T>}\n */\nfunction linkifyReactElement(element, opts, meta) {\n  if (React.Children.count(element.props.children) === 0) {\n    // No need to clone if the element had no children\n    return element;\n  }\n  const children = [];\n  React.Children.forEach(element.props.children, child => {\n    if (typeof child === 'string') {\n      // ensure that we always generate unique element IDs for keys\n      children.push.apply(children, stringToElements(child, opts, meta));\n    } else if (React.isValidElement(child)) {\n      if (typeof child.type === 'string' && opts.ignoreTags.indexOf(child.type.toUpperCase()) >= 0) {\n        // Don't linkify this element\n        children.push(child);\n      } else {\n        children.push(linkifyReactElement(child, opts, meta));\n      }\n    } else {\n      // Unknown element type, just push\n      children.push(child);\n    }\n  });\n\n  // Set a default unique key, copy over remaining props\n  const key = `__linkify-el-${meta.elementId++}`;\n  const newProps = options.assign({\n    key\n  }, element.props);\n  return React.cloneElement(element, newProps, children);\n}\n\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {P & { as?: T, tagName?: T, options?: import('linkifyjs').Opts, children?: React.ReactNode}} props\n * @returns {React.ReactElement<P, T>}\n */\nconst Linkify = props => {\n  // Copy over all non-linkify-specific props\n  let linkId = 0;\n  const defaultLinkRender = ({\n    tagName,\n    attributes,\n    content\n  }) => {\n    attributes.key = `__linkify-lnk-${linkId++}`;\n    if (attributes.class) {\n      attributes.className = attributes.class;\n      delete attributes.class;\n    }\n    return React.createElement(tagName, attributes, content);\n  };\n  const newProps = {\n    key: '__linkify-wrapper'\n  };\n  for (const prop in props) {\n    if (prop !== 'options' && prop !== 'as' && prop !== 'tagName' && prop !== 'children') {\n      newProps[prop] = props[prop];\n    }\n  }\n  const opts = new Options(props.options, defaultLinkRender);\n  const as = props.as || props.tagName || React.Fragment || 'span';\n  const children = props.children;\n  const element = React.createElement(as, newProps, children);\n  return linkifyReactElement(element, opts, {\n    elementId: 0\n  });\n};\n\nexport { Linkify as default };\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"PropTypes\"];","/**\n * Example Usage:\n * ```\n * <MessageInput\n *     onSend={handleSend}\n *     handleInputChange={handleInput}\n *     value={messageValue}\n *     placeholder=\"Type your message here\"\n *     buttonLabel=\"Send\"\n *     customStyles={{ backgroundColor: \"#f0f0f0\" }}\n *     inputComponentStyles={{ padding: \"10px\" }}\n * />\n * ```\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A reusable message input component for chat interfaces.\n*/\n\nconst MessageInput = ({\n    onSend,\n    handleInputChange,\n    value,\n    placeholder,\n    buttonLabel,\n    customStyles,\n    inputComponentStyles,\n    showTyping,\n}) => {\n    return (\n        <div className=\"message-input-container\" style={customStyles}>\n            <input\n                type=\"text\"\n                value={value}\n                placeholder={placeholder}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" && !showTyping){\n                        onSend();\n                    }\n                }}\n                style={inputComponentStyles}\n                className=\"message-input-field\"\n            />\n            <button\n                onClick={onSend}\n                className={`message-input-button ${showTyping ? 'disabled' : ''}`}\n                data-testid=\"send-button\"\n                disabled={showTyping}\n            >\n                {buttonLabel}\n            </button>\n        </div>\n    );\n};\n\nMessageInput.propTypes = {\n    /**\n     * Callback to send the current message. Triggered on button click or pressing \"Enter\".\n    */\n    onSend: PropTypes.func.isRequired,\n    /**\n     * Callback to handle input field changes.\n    */\n    handleInputChange: PropTypes.func.isRequired,\n    /**\n     * The current value of the input field.\n    */\n    value: PropTypes.string,\n    /**\n     * Placeholder text for the input field. Default is `\"Start typing...\"`.\n    */\n    placeholder: PropTypes.string,\n    /**\n     * Label for the send button. Default is `\"Send\"`.\n    */\n    buttonLabel: PropTypes.string,\n    /**\n     * Inline styles for the container holding the input and button.\n    */\n    customStyles: PropTypes.object,\n    /**\n     * Inline styles for the input field.\n    */\n    inputComponentStyles: PropTypes.object,\n    /**\n     * Disable button when waiting for message.\n    */\n    showTyping: PropTypes.bool\n};\n\nMessageInput.defaultProps = {\n    placeholder: \"Start typing...\",\n    buttonLabel: \"Send\",\n    customStyles: null,\n    inputComponentStyles: null,\n    showTyping: false\n};\n\nexport default MessageInput;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./indicatorStyle.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./indicatorStyle.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../styles/indicatorStyle.css\"\n\n/**\n * A resuable dots typing indicator\n*/\n\nconst TypingIndicatorDots = ({ color }) => {\n    return (\n        <div className=\"typing-dots\" style={{ color }}>\n            <span></span>\n            <span></span>\n            <span></span>\n        </div>\n    );\n};\n\nTypingIndicatorDots.propTypes = {\n    /**\n     * Color of the dots\n    */\n    color: PropTypes.string,\n};\n\nTypingIndicatorDots.defaultProps = {\n    color: \"gray\",\n};\n\nexport default TypingIndicatorDots;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../styles/indicatorStyle.css\"\n\n/**\n * A resuable spinner typing indicator\n*/\nconst TypingIndicatorSpinner = ({ size, color }) => {\n    return (\n        <div\n            className=\"typing-spinner\"\n            style={{\n                width: size,\n                height: size,\n                borderColor: color,\n                borderTopColor: \"transparent\",\n            }}\n        ></div>\n    );\n};\n\nTypingIndicatorSpinner.propTypes = {\n    /**\n     * size of the spinner\n    */\n    size: PropTypes.number,\n    /**\n     * Color of the spinner\n    */\n    color: PropTypes.string,\n};\n\n\nTypingIndicatorSpinner.defaultProps = {\n    size: 20,\n    color: \"gray\",\n};\n\nexport default TypingIndicatorSpinner;\n","export const bubbleStyle = {\n    maxWidth: \"75%\",\n    marginBottom: \"10px\",\n    padding: \"10px\",\n    borderRadius: \"12px\",\n    wordWrap: \"break-word\"\n};\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./chatStyles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./chatStyles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * Example Usage:\n * ```\n * <ChatComponent\n *     id=\"chat\"\n *     messages={[\n *         { role: \"assistant\", content: \"Hello! How can I assist you today?\" }\n *     ]}\n *     typing_indicator=\"dots\"\n *     theme=\"dark\"\n *     custom_styles={{ backgroundColor: \"#222\", color: \"#fff\" }}\n *     is_typing={{ user: false, assistant: true }}\n * />\n * ```\n*/\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Linkify from \"linkify-react\";\nimport PropTypes from \"prop-types\";\n\nimport MessageInput from \"../../private/ChatMessageInput\";\nimport TypingIndicatorDots from \"../../private/DotsIndicator\";\nimport TypingIndicatorSpinner from \"../../private/SpinnerIndicator\";\nimport { bubbleStyle as sharedBubbleStyle } from \"../../styles/sharedStyles\";\n\nimport \"../../styles/chatStyles.css\";\n\n/**\n * ChatComponent - A React-based chat interface with customizable styles and typing indicators.\n * * This component provides a chat interface with support for:\n * - Displaying messages exchanged between 2 users typically a user and an assistant.\n * - Customizable themes and styles for the chat UI.\n * - Typing indicators for both the user and assistant.\n * - Integration with Dash via the `setProps` callback for state management.\n*/\n\nconst ChatComponent = ({\n    /**\n     * allowing snake_case to support Python's naming convention\n     * except for setProps which is automatically set by dash and\n     * it's expected to be named in the camelCase format.\n     * https://dash.plotly.com/react-for-python-developers\n    */\n    messages: propMessages,\n    theme,\n    container_style: containerStyle,\n    typing_indicator: typingIndicator,\n    input_container_style: inputContainerStyle,\n    input_text_style: inputTextStyle,\n    setProps,\n    fill_height: fillHeight,\n    fill_width: fillWidth,\n    bubble_styles: bubbleStyles,\n    input_placeholder: inputPlaceholder,\n}) => {\n    const linkifyOptions = {\n        className: \"link-message\",\n        target: \"_blank\",\n    };\n    const { user: userBubbleStyle, assistant: assistantBubbleStyle } = bubbleStyles || {};\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    const [localMessages, setLocalMessages] = useState(propMessages || []);\n    const messageEndRef = useRef(null);\n    const [showTyping, setShowTyping] = useState(false);\n\n    useEffect(() => {\n        console.log(propMessages)\n        const lastMsg = propMessages.slice(-1).pop();\n\n        if (lastMsg?.role === \"assistant\" && showTyping) {\n            setShowTyping(false);\n        }\n        setLocalMessages(propMessages || []);\n    }, [propMessages]);\n\n    useEffect(() => {\n        if (messageEndRef.current) {\n            messageEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n    }, [localMessages]);\n\n    const handleInputChange = (e) => {\n        setCurrentMessage(e.target.value);\n    };\n\n    const handleSendMessage = () => {\n        if (currentMessage.trim()) {\n            const newMessage = { role: \"user\", content: currentMessage };\n            setLocalMessages((prevMessages) => [...prevMessages, newMessage]);\n\n            if (setProps) {\n                setProps({ new_message: newMessage });\n            }\n\n            setShowTyping(true);\n            setCurrentMessage(\"\");\n        }\n    };\n\n    const styleChatContainer = {};\n    const inputFieldStyle = {};\n    if (fillHeight) {\n        styleChatContainer.height = \"100%\";\n    } else {\n        styleChatContainer.height = \"50%\";\n    }\n    if (fillWidth) {\n        styleChatContainer.width = \"auto\";\n    } else {\n        styleChatContainer.width = \"50%\";\n        styleChatContainer.margin = \"0 auto\";\n    }\n    if (theme === \"dark\") {\n        styleChatContainer.backgroundColor = \"#161618\";\n        styleChatContainer.borderColor = \"#444444\";\n        styleChatContainer.color = \"#ffffff\";\n        inputFieldStyle.borderColor = \"#f1f0f0\";\n        inputFieldStyle.color = \"#000000\";\n    } else {\n        styleChatContainer.backgroundColor = \"#ffffff\";\n        styleChatContainer.borderColor = \"#e0e0e0\";\n        styleChatContainer.color = \"#e0e0e0\";\n        inputFieldStyle.borderColor = \"#e0e0e0\"\n    }\n\n    return (\n        <div className={\"chat-container\"} style={{ ...styleChatContainer, ...containerStyle }}>\n            <div className=\"chat-messages\">\n                {localMessages.length === 0 ? (\n                    <div className=\"empty-chat\">No conversation yet.</div>\n                ) : (\n                    localMessages.map((message, index) => {\n                        if (!message || typeof message !== \"object\" || !message.role || !message.content) {\n                            console.warn(`Invalid message at index ${index}:`, message);\n                            return null;\n                        }\n                        const bubbleStyle = message.role === \"user\" ? userBubbleStyle : assistantBubbleStyle;\n                        return (\n                            <div\n                                key={index}\n                                className={`chat-bubble ${message.role}`}\n                                style={bubbleStyle}\n                            >\n                                <Linkify options={linkifyOptions}>{message.content}</Linkify>\n                            </div>\n                        )\n                    })\n                )}\n                {showTyping && (\n                    <div className=\"typing-indicator user-typing\" data-testid=\"typing-indicator\">\n                        {typingIndicator === \"dots\" && <TypingIndicatorDots />}\n                        {typingIndicator === \"spinner\" && <TypingIndicatorSpinner />}\n                    </div>\n                )}\n                <div ref={messageEndRef} />\n            </div>\n            <div className=\"chat-input\">\n                <MessageInput\n                    onSend={handleSendMessage}\n                    handleInputChange={handleInputChange}\n                    value={currentMessage}\n                    customStyles={inputContainerStyle}\n                    inputComponentStyles={{...inputFieldStyle, ...inputTextStyle}}\n                    placeholder={inputPlaceholder}\n                    showTyping={showTyping}\n                />\n            </div>\n        </div>\n    );\n};\n\nChatComponent.propTypes = {\n    /**\n     * The ID of this component, used to identify dash components\n     * in callbacks. The ID needs to be unique across all of the\n     * components in an app.\n    */\n    id: PropTypes.string,\n    /**\n     * An array of options. The list of chat messages. Each message object should have:\n     *    - `role` (string): The message sender, either \"user\" or \"assistant\".\n     *    - `content` (string): The content of the message.\n    */\n    messages: PropTypes.arrayOf(\n        PropTypes.shape({\n            role: PropTypes.oneOf([\"user\", \"assistant\"]).isRequired,\n            content: PropTypes.string.isRequired,\n        })\n    ),\n    /**\n     * Dash-assigned callback that gets fired when the value for messages and isTyping changes.\n    */\n    setProps: PropTypes.func,\n    /**\n     * Theme for the chat interface. Default is \"light\". Use \"dark\" for a dark mode appearance.\n    */\n    theme: PropTypes.string,\n    /**\n     * Inline css styles to customize the chat container.\n    */\n    container_style: PropTypes.object,\n    /**\n     * The type of typing indicator to display. Options are:\n     *    - `\"dots\"`: Displays animated dots.\n     *    - `\"spinner\"`: Displays a spinner animation.\n    */\n    typing_indicator: PropTypes.oneOf([\"dots\", \"spinner\"]),\n    /**\n     * Latest chat message that was appended to messages array.\n    */\n    new_message: PropTypes.object,\n    /**\n     * Inline styles for the container holding the message input field.\n    */\n    input_container_style: PropTypes.object,\n    /**\n     * Inline styles for the message input field itself.\n    */\n    input_text_style: PropTypes.object,\n    /**\n     *  Whether to vertically fill the screen with the chat container. If False, centers and constrains container to a maximum height.\n    */\n    fill_height: PropTypes.bool,\n    /**\n     * Whether to horizontally fill the screen with the chat container. If False, centers and constrains container to a maximum width.\n    */\n    fill_width: PropTypes.bool,\n    /**\n     * Css styles to customize the chat message bubbles.\n    */\n    bubble_styles: PropTypes.shape({\n        user: PropTypes.object,\n        assistant: PropTypes.object,\n    }),\n    /**\n     * Placeholder input to bne used in the input field\n    */\n    input_placeholder: PropTypes.string,\n};\n\nChatComponent.defaultProps = {\n    setProps: () => {},\n    theme: \"light\",\n    container_style: null,\n    typing_indicator: \"dots\",\n    new_message: null,\n    input_container_style: null,\n    input_text_style: null,\n    fill_height: true,\n    fill_width: true,\n    bubble_styles: {\n        user: {\n            ...sharedBubbleStyle,\n            backgroundColor: \"#007bff\",\n            color: \"white\",\n            marginLeft: \"auto\",\n            textAlign: \"right\",\n        },\n        assistant: {\n            ...sharedBubbleStyle,\n            backgroundColor: \"#f1f0f0\",\n            color: \"black\",\n            marginRight: \"auto\",\n            textAlign: \"left\",\n        },\n    },\n    input_placeholder: \"\"\n};\n\nexport default ChatComponent;\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","url","getCurrentScript","script","currentScript","doc_scripts","getElementsByTagName","scripts","filter","s","async","text","textContent","slice","src","split","jsonpScriptSrc","__jsonpScriptSrc__","chunkId","isLocal","test","srcFragments","fileFragments","nc","properties","numeric","ascii","alpha","asciinumeric","alphanumeric","domain","emoji","scheme","slashscheme","whitespace","registerGroup","name","groups","addToGroups","t","flags","group","indexOf","State","token","j","jr","jd","accepts","go","input","state","nextState","regex","has","exactOnly","ta","inputs","next","tt","tr","regexp","ts","len","templateState","allFlags","c","flagsForToken","WORD","UWORD","ASCIINUMERICAL","ALPHANUMERICAL","LOCALHOST","TLD","UTLD","SCHEME","SLASH_SCHEME","NUM","WS","NL","OPENBRACE","CLOSEBRACE","OPENBRACKET","CLOSEBRACKET","OPENPAREN","CLOSEPAREN","OPENANGLEBRACKET","CLOSEANGLEBRACKET","FULLWIDTHLEFTPAREN","FULLWIDTHRIGHTPAREN","LEFTCORNERBRACKET","RIGHTCORNERBRACKET","LEFTWHITECORNERBRACKET","RIGHTWHITECORNERBRACKET","FULLWIDTHLESSTHAN","FULLWIDTHGREATERTHAN","AMPERSAND","APOSTROPHE","ASTERISK","AT","BACKSLASH","BACKTICK","CARET","COLON","COMMA","DOLLAR","DOT","EQUALS","EXCLAMATION","HYPHEN","PERCENT","PIPE","PLUS","POUND","QUERY","QUOTE","FULLWIDTHMIDDLEDOT","SEMI","SLASH","TILDE","UNDERSCORE","EMOJI$1","SYM","tk","freeze","__proto__","EMOJI","ASCII_LETTER","LETTER","DIGIT","SPACE","tlds","utlds","run$1","start","str","iterable","second","first","charCodeAt","char","stringToArray","replace","toLowerCase","charCount","tokens","cursor","charCursor","tokenLength","latestAccepting","sinceAccepts","charsSinceAccepts","v","fastts","defaultt","decodeTlds","encoded","words","stack","popDigitCount","popCount","parseInt","substring","pop","defaults","defaultProtocol","events","format","noop","formatHref","nl2br","tagName","rel","validate","truncate","Infinity","className","ignoreTags","render","Options","opts","defaultRender","ignoredTags","uppercaseIgnoredTags","toUpperCase","val","ir","check","operator","isCallable","option","getObj","assign","MultiToken","createTokenClass","type","props","Token","constructor","super","p","isLink","toHref","toFormattedString","formatted","toFormattedHref","startIndex","endIndex","toObject","protocol","href","end","toFormattedObject","formattedHref","attrs","eventListeners","class","Email","Text","Nl","Url","hasProtocol","makeState","arg","initMultiToken","Multi","startIdx","endIdx","console","warn","INIT","scanner","parser","tokenQueue","pluginQueue","customSchemes","initialized","tokenize","Start","Num","Asciinumeric","Alphanumeric","Word","UWord","Cr","Ws","Emoji","EmojiJoiner","wordjr","uwordjr","tld","utld","sort","b","sch","init$2","qsAccepting","qsNonAccepting","localpartAccepting","Localpart","Domain","Scheme","SlashScheme","LocalpartAt","LocalpartDot","EmailDomain","EmailDomainDot","Email$1","EmailDomainHyphen","EmailColon","DomainHyphen","DomainDot","DomainDotTld","DomainDotTldColon","DomainDotTldColonPort","Url$1","UrlNonaccept","SchemeColon","SlashSchemeColon","SlashSchemeColonSlash","UriPrefix","bracketPairs","OPEN","CLOSE","UrlOpen","UrlOpenQ","UrlOpenSyms","init$1","init","multis","textTokens","secondState","multiLength","subtokens","run","linkifyReactElement","meta","children","forEach","child","elements","elementId","rendered","stringToElements","newProps","scan","Linkify","linkId","as","MessageInput","_ref","onSend","handleInputChange","placeholder","buttonLabel","customStyles","inputComponentStyles","showTyping","React","onChange","onKeyDown","onClick","disabled","propTypes","PropTypes","isRequired","defaultProps","locals","TypingIndicatorDots","color","TypingIndicatorSpinner","size","width","height","borderColor","borderTopColor","bubbleStyle","maxWidth","marginBottom","padding","borderRadius","wordWrap","ChatComponent","propMessages","messages","theme","containerStyle","container_style","typingIndicator","typing_indicator","inputContainerStyle","input_container_style","inputTextStyle","input_text_style","setProps","fillHeight","fill_height","fillWidth","fill_width","bubbleStyles","bubble_styles","inputPlaceholder","input_placeholder","linkifyOptions","_ref2","userBubbleStyle","user","assistantBubbleStyle","assistant","_useState2","_slicedToArray","useState","currentMessage","setCurrentMessage","_useState4","localMessages","setLocalMessages","messageEndRef","useRef","_useState6","setShowTyping","useEffect","log","lastMsg","role","current","scrollIntoView","behavior","styleChatContainer","inputFieldStyle","margin","backgroundColor","_objectSpread","message","_typeof","ref","trim","newMessage","prevMessages","new_message","sharedBubbleStyle","marginLeft","textAlign","marginRight"],"sourceRoot":""}